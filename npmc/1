#!/usr/bin/python
import read_lmp_rev6 as rdlmp
import mc_routine as mcr
import numpy as np
import matplotlib.pyplot as plt
from lammps import lammps
from subprocess import call
import os

#def test_getmol(bonds,startID)

#def test_cbmc(mol):
def make_dih_cdf(filename,beta):
    dih_potential = np.loadtxt(filename,skiprows=1)
    dih_cdf = np.cumsum(np.exp(-beta*dih_potential[:,1]))
    dih_cdf_norm = dih_cdf/dih_cdf[dih_cdf.shape[0]-1]
    dih_cdf_norm = np.hstack((dih_potential[:,0].reshape((dih_cdf.shape[0],1)),dih_cdf_norm.reshape((dih_cdf.shape[0],1))))
    return dih_cdf_norm 

def test_make_dih_cdf():
    kb = 0.0019872041
    T = 298.15
    beta = 1.0/(kb*T)
    dih_cdf = make_dih_cdf("/home/green/np-mc/inputfiles/dih_potential_1",beta)
    plt.plot(dih_cdf[:,0],dih_cdf[:,1])
    plt.show()

def turn_off_atoms(lmp,atomIDS):
    stratoms = ' '.join(map(str,atomIDS))
    lmp.command("group offchain id "+stratoms)
    lmp.command("neigh_modify exclude group offchain all")

def  start_lammps(config_file):
    lmp = lammps()
    dname = os.path.dirname(config_file)
    print 'Directory name is '+dname
    #call(["cd",dname],shell=True)
    os.chdir(dname)
    lmp.file(config_file)
    return lmp 

def calc_beta(T):
    kb = 0.0019872041
    T = 298.15
    return 1.0/(kb*T)


if __name__=='__main__':  
    temp = 298.15
    beta = calc_beta(temp)
    dih_cdf = make_dih_cdf('/home/green/np-mc/inputfiles/dih_potential_1',beta)
    
    molecule = rdlmp.readAll('/home/green/np-mc/lt_files/meoh_example/system.data')
    sulfurID = 2
    atoms = molecule[0]
    startID = atoms[atoms[:,2]==sulfurID][:,0]
    mol = rdlmp.getMoleculeAtoms(molecule[1],startID)
    
    lmp = start_lammps('/home/green/np-mc/lt_files/meoh_example/system.in')
    lmp.command("dump xyzdump all xyz 1 regrow.xyz")
    lmp.command("dump_modify xyzdump element C S O H")
    lmp.command("compute pair_pe all pe pair")
    lmp.command("fix pe_out all ave/time 1 1 1 c_thermo_pe c_pair_pe file pe.out") 
    lmp.command("thermo 1")
    lmp.command("minimize 1e-6 1e-8 100 1000")
    turn_off_atoms(lmp, )
    #lmp.command("fix fxnvt all nvt temp 300 300 100")
    #lmp.command("run 5000")
    #mcr.cbmc(atoms,mol,beta,lmp,dih_cdf,1)
    print mol
